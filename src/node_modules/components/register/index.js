import React, { Component } from "react";
import { Auth } from "aws-amplify";
import { Button, FormGroup, FormControl, ControlLabel } from "react-bootstrap";
import "../Login/login.css";

export default class Register extends Component {
  constructor(props) {
    super(props);

    this.state = {
      email: "",
      password: "",
      confirmPassword: "",
      ConfirmCode: "",
      confirm:false
    };
  }

  validateForm() {
    return (
      this.state.email.length > 0 &&
      this.state.password.length > 0 &&
      this.state.password === this.state.confirmPassword
    );
  }

  handleChange = event => {
    this.setState({
      [event.target.id]: event.target.value
    });
  };

  handleChangeConfirm = event => {
    this.setState({
      ConfirmCode: event.target.value
    });
  };
  handleSubmit = async event => {
    event.preventDefault();
    try {
      await Auth.signUp({
        username: this.state.email,
        password: this.state.password
      });
      this.setState({confirm:true})
    } catch (error) {
    console.log(error)
      alert("error");
    }
  };

  confirmUser = async event => {
    event.preventDefault();
    console.log(this.state.ConfirmCode)
    try {
      await Auth.confirmSignUp(
       this.state.ConfirmCode
      );
      this.props.router.push("/login");
    } catch (error) {
        console.log(error)

      alert("error");
    }
  };

  render() {
    return (
      <div className="Login">
        <form onSubmit={this.handleSubmit}>
          <FormGroup controlId="email" bsSize="large">
            <ControlLabel>Email</ControlLabel>
            <FormControl
              autoFocus
              type="email"
              value={this.state.email}
              onChange={this.handleChange}
            />
          </FormGroup>
          <FormGroup controlId="password" bsSize="large">
            <ControlLabel>Password</ControlLabel>
            <FormControl
              value={this.state.password}
              onChange={this.handleChange}
              type="password"
            />
          </FormGroup>
          <FormGroup controlId="confirmPassword" bsSize="large">
            <ControlLabel>Confirm Password</ControlLabel>
            <FormControl
              value={this.state.ConfirmPassword}
              onChange={this.handleChange}
              type="password"
            />
          </FormGroup>
          <Button
            block
            bsSize="large"
            disabled={!this.validateForm()}
            type="submit"
          >
            Get confirmation code
          </Button>
          {this.state.confirm?
          <form onSubmit = {this.confirmUser}>
          <FormGroup controlId="ConfirmCode" bsSize="large">
          <ControlLabel>Enter Confirm code</ControlLabel>
          <FormControl
            value={this.state.ConfirmCode}
            onChange={this.handleChangeConfirm}
            type="input"
          />
          </FormGroup>
          <Button
            block
            bsSize="large"
            disabled={!this.validateForm()}
            type="submit"
          >
            Register
          </Button>
          </form>
          :null}
        </form>
      </div>
    );
  }
}
