import React, { Component } from "react";
import PropTypes from "prop-types";
import { connect } from "react-redux";
import "./searchBox.css";
import {fetchPhones} from "api";

const ulStyle = {
    listStyle: 'none',
    paddingLeft: 0
}

export default class SearchBar extends Component {
  static propTypes = {
    prop: PropTypes
  };

  constructor() {
    super();
    this.state = {
      searchTerm: "",
      phones: [],
      showDefault: false,
      suggestionList: [],
      showModal: false,
      modalDisplayObj: null,
      showList: false
    };
  }

  componentDidMount= async ()=>{
     const phones = await fetchPhones();
     this.setState({phones});
  }

  onChange = e => {
    let prom = new Promise((resolve, reject) => {
      this.setState({ searchTerm: e.target.value });
      resolve();
    });
    prom.then(() => {
      //console.log(searchTerm);
      this.getSuggestions(this.state.searchTerm);
    });
  };

  handleClick =(e)=>{
    let node = e.path.filter(aPath=>(aPath.id === "search-box"));
    if(!node.length){
        this.setState({showList:false});
    }
    else{
        this.setState({showList:true});            
    }
}

  getSuggestions = searchTerm => {
    const len = searchTerm.split("").length;
    
    const { phones } = this.state;
    let suggestionList = [];
    let prom = new Promise(resolve => {
      suggestionList = phones
        .filter(phone => {
          {
            return (
              searchTerm !== "" &&
              phone.name.toString().substr(0, len).toLowerCase() === searchTerm
            );
          }
        })
        .map(suggestion => {
          return suggestion.name;
        });
      resolve();
    });
    prom.then(() => {
      this.setState({ suggestionList });
      console.log(suggestionList)
    });
  };
  render() {
      const {suggestionList,showList} = this.state;
    return (
      <div className="well blosd">
        <form className="example" onSubmit={this.onSubmit}>
        
          <input
            type="search"
            placeholder="Search.."
            name="search"
            id="search-box"
            value={this.state.searchTerm}
            onChange={this.onChange}
          />
          {/* {this.state.searchTerm.length ? (
            <button
              className="cancel"
              onClick={e => {
                this.setState({ searchTerm: "" });
              }}
            >
              <i className="fa fa-close" />
            </button>
          ) : null} */}
          <span>
          
          <button type="submit">
            <i className="fa fa-search" />
          </button>
          </span>
          {suggestionList.length? <div className="suggestion"><ul style={ulStyle}>{suggestionList.map(suggestion => <li><a href="#" onClick = {(e)=>this.handleSearchClick(e,suggestion)}>{suggestion}</a></li>)}</ul></div> : null}
        </form>
      </div>
    );
  }
}




