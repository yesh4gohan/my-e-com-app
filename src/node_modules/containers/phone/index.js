import React, { Component } from "react";
import PropTypes from "prop-types";
import { connect } from "react-redux";
import { fetchPhoneById } from "actions";

export class Phone extends Component {
  constructor() {
    super();
    this.state = {};
  }
  componentDidMount() {
    this.props.fetchPhoneById(this.props.params.id);
  }
  renderPhone = () => {
    const { phone } = this.props;
    return (
      <div className="thumbnail">
        <div className="row">
          <div className="col-md-6">
            <img className="img-thumbnail" src={phone.image} alt={phone.name} />
          </div>
          <div className="col-md-6">{this.renderFields()}</div>
        </div>
        <div className="caption-full">
          <h4 className="pull-right">${phone.price}</h4>
          <h4>{phone.name}</h4>
          <p>{phone.description}</p>
        </div>
      </div>
    );
  };
  renderSidebar = () => {
    return <div>sidebar</div>;
  };

  renderFields = () => {
    const { phone } = this.props;
    const keyValPairs = Object.entries(phone).filter(
      (keyValPair,count) => count > 1 
    );
    console.log(keyValPairs);
    return (
      <ul>
        {keyValPairs.map(keyValPair => {
          return (
            <li>
              {keyValPair[0]} is {keyValPair[1]}
            </li>
          );
        })}
      </ul>
    );
  };

  render() {
    const { phone } = this.props;
    console.log(phone.id);
    return (
      <div>
        <div className="view-container">
          <div className="container">
            <div className="row">
              <div className="col-md-9">{phone && this.renderPhone()}</div>
              <div className="col-md-3">{phone && this.renderSidebar()}</div>
            </div>
          </div>
        </div>
      </div>
    );
  }
}

const mapStateToProps = state => ({
  phone: state.phone
});

const mapDispatchToProps = {
  fetchPhoneById
};

export default connect(
  mapStateToProps,
  mapDispatchToProps
)(Phone);
