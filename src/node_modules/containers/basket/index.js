import React, { Component } from 'react'
import PropTypes from 'prop-types'
import { connect } from 'react-redux'
import {removeFromCart} from 'actions';
import {getCartProducts,getTotalPrice} from "selectors";
class Basket extends Component {
  static propTypes = {
    prop: PropTypes
  }
  renderSideBar = () => {
    return(
        <div>
            sidebar
        </div>
    );
  }
  renderCartProducts = () => {
      const {totalPrice,cartProducts} = this.props;
    const isCartEmpty = !cartProducts.length;
    //console.log(this.props.cart)
    return(
        <div>
            {isCartEmpty && <div>Your cart is empty</div>}
            <div className='table-responsive'>
          <table className='table-bordered table-striped table-condensed cf'>
            <tbody>
            {cartProducts.map((cartProduct, index) => (
              <tr
                key={index}
                className='item-checout'
              >
                <td className='first-column-checkout'>
                  <img
                    className='img-thumbnail'
                    src={cartProduct.image}
                    alt={cartProduct.name}
                  />
                </td>
                <td>{cartProduct.name}</td>
                <td>${cartProduct.price}</td>
                <td>{cartProduct.count}</td>
                <td>
                    <span onClick = {()=>{this.props.removeFromCart(cartProduct)}}
                      className='delete-cart'
                    />
                </td>
              </tr>
            ))}
            </tbody>
          </table>
        </div>
        </div>
    );
  }
  render() {
    return (
      <div className = "view-container">
        <div className = "container">
            <div className = "col-md-9">
                {this.renderCartProducts()}
            </div>
            <div className = "col-md-3">
                {this.renderSideBar()}
            </div>
        </div>
      </div>
    )
  }
}

const mapStateToProps = (state) => ({
    cartProducts: getCartProducts(state),
    totalPrice: getTotalPrice(state),
    cart:state.cart
})

const mapDispatchToProps = {
  removeFromCart
}

export default connect(mapStateToProps, mapDispatchToProps)(Basket)
