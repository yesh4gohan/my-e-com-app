import {
  FETCH_PHONES_START,
  FETCH_PHONES_SUCCESS,
  FETCH_PHONES_FAILURE,
  LOAD_PHONES_FAILURE,
  LOAD_PHONES_START,
  LOAD_PHONES_SUCCESS,
  FETCH_EACH_PHONES_START,
  FETCH_EACH_PHONES_SUCCESS,
  FETCH_EACH_PHONES_FAILURE,
  ADD_TO_CART_START,
  ADD_TO_CART_SUCCESS,
  ADD_TO_CART_FAILURE
  ADD_TO_CART_FAILURE,
  DO_LOGIN,REMOVE_FROM_CART_SUCCESS
} from "actionTypes";

import {
  fetchPhones as fetchPhonesApi,
  loadMorePhones as loadMorePhonesApi,
  fetchPhoneById as fetchPhoneByIdApi
} from "api";
const PRODUCTS_PER_PAGE = 3;

export const fetchPhones = () => async dispatch => {
  dispatch({ type: FETCH_PHONES_START });
  try {
    const phones = await fetchPhonesApi();
    const phones_per_page = phones.filter(
      phone => phone.id <= PRODUCTS_PER_PAGE
    );
    dispatch({
      type: FETCH_PHONES_SUCCESS,
      payload: phones_per_page
    });
  } catch (error) {
    dispatch({
      type: FETCH_PHONES_FAILURE,
      payload: error,
      error: true
    });
  }
};

export const loadMorePhones = products_count => async dispatch => {
  dispatch({
    type: LOAD_PHONES_START
  });
  try {
    const phones = await loadMorePhonesApi();
    const phones_per_page = phones.filter(
      phone =>
        phone.id > products_count &&
        phone.id <= products_count + PRODUCTS_PER_PAGE
    );

    dispatch({
      type: LOAD_PHONES_SUCCESS,
      payload: phones_per_page
    });
  } catch (error) {
    dispatch({
      type: LOAD_PHONES_FAILURE,
      payload: error,
      error: true
    });
  }
};

export const fetchPhoneById = id => async dispatch => {
  dispatch({
    type: FETCH_EACH_PHONES_START
  });
  try {
    const phone = await fetchPhoneByIdApi(id);
    dispatch({
      type: FETCH_EACH_PHONES_SUCCESS,
      payload: phone[0]
    });
  } catch (error) {
    dispatch({
      type: FETCH_EACH_PHONES_FAILURE,
      payload: error,
      error: true
    });
  }
};

export const addToCart = (id) => async (dispatch,getState) => {
    dispatch({
        type:ADD_TO_CART_START
    })
    
    try {
        const stateTree = getState();
        const phones = stateTree.phones;

        const cartProduct = phones.filter(phone=>phone.id === id)[0];

        dispatch({
            type:ADD_TO_CART_SUCCESS,
            payload:cartProduct
        })
    } catch (error) {
        dispatch({
            type:ADD_TO_CART_FAILURE,
            payload:error,
            error:true
        })
    }
}

export const authenticate = val => dispatch => {
    dispatch({
        type:DO_LOGIN,
        payload:val
    })
}

export const removeFromCart = (product) => dispatch => {
    dispatch({
        type: REMOVE_FROM_CART_SUCCESS,
        payload:product
    })
}